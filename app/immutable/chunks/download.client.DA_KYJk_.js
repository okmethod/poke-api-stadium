function t(n,o){const s=URL.createObjectURL(n),e=document.createElement("a");e.href=s,e.download=o,document.body.appendChild(e),e.click(),document.body.removeChild(e),URL.revokeObjectURL(s)}function c(n,o,s){const e=new Blob([n],{type:s});t(e,o)}async function r(n,o){const e=new Blob([n],{type:o}).stream().pipeThrough(new CompressionStream("gzip"));return await new Response(e).blob()}async function a(n){const o=n.stream().pipeThrough(new DecompressionStream("gzip"));return await(await new Response(o).blob()).text()}async function l(n,o,s){const e=await r(n,s);t(e,o+".gz")}async function p(n,o,s){console.log("downloading:",o);try{s?await l(n,o,"application/json"):c(n,o,"application/json")}catch(e){throw console.error(`failed to download ${o}:`,e),e}}const d=!1;async function b(n){console.log("loading: ",n);try{const s=await(await fetch(n)).blob();let e;return d||(e=await a(s)),JSON.parse(e)}catch(o){throw console.error(`failed to load ${n}:`,o),o}}export{p as d,b as l};
