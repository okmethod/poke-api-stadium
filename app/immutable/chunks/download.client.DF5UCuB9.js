function c(n,o){const s=URL.createObjectURL(n),e=document.createElement("a");e.href=s,e.download=o,document.body.appendChild(e),e.click(),document.body.removeChild(e),URL.revokeObjectURL(s)}function r(n,o,s){const e=new Blob([n],{type:s});c(e,o)}async function a(n,o){const e=new Blob([n],{type:o}).stream().pipeThrough(new CompressionStream("gzip"));return await new Response(e).blob()}async function l(n){const o=n.stream().pipeThrough(new DecompressionStream("gzip"));return await(await new Response(o).blob()).text()}async function d(n,o,s){const e=await a(n,s);c(e,o+".gz")}async function p(n,o,s){console.log("downloading:",o);try{s?await d(n,o,"application/json"):r(n,o,"application/json")}catch(e){throw console.error(`failed to download ${o}:`,e),e}}const i=!1;async function b(n,o){console.log("loading: ",o);try{const e=await(await n(o)).blob();let t;return i||(t=await l(e)),JSON.parse(t)}catch(s){throw console.error(`failed to load ${o}:`,s),s}}export{p as d,b as l};
