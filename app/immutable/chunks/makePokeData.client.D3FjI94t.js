import{c as e}from"./type.DlO2-6e_.js";async function t(e,t,a){try{const n=await e(t,a);if(!n.ok)throw console.error("API response:",n.status),new Error(`Failed to fetch: ${a.method} ${t}`);return n}catch(n){throw console.error("API error:",n),new Error(`Failed to fetch: ${a.method} ${t}`)}}async function a(e,a){return async function(e,a){const n={credentials:"same-origin",method:"GET"},s=await t(e,a,n);return await s.json()}(e,`https://pokeapi.co/api/v2/pokemon/${a}`)}async function n(e,t){return s(e,`https://pokeapi.co/api/v2/type/${t}`)}async function s(e,a){const n={...{credentials:"same-origin"},method:"GET"},s=await t(e,a,n);return await s.json()}function r(e){let t=[];if("object"==typeof e&&null!==e)for(const a in e){const n=e[a];"string"==typeof n?t.push(n):"object"==typeof n&&null!==n&&(t=t.concat(r(n)))}return t}function i(e){let t=r(e);return e.front_default&&(t=[e.front_default,...t.filter((t=>t!==e.front_default))]),t}function o(e){const t={};return e.forEach((e=>{switch(e.stat.name){case"hp":t.hp=e.base_stat;break;case"attack":t.attack=e.base_stat;break;case"defense":t.defense=e.base_stat;break;case"special-attack":t.specialAttack=e.base_stat;break;case"special-defense":t.specialDefense=e.base_stat;break;case"speed":t.speed=e.base_stat}})),t}function c(e){var t;return{jaName:e.jaName,jaGenus:e.jaGenus,imageUrl:e.imageUrl,imageBackUrl:e.imageBackUrl,gifUrl:e.gifUrl,gifBackUrl:e.gifBackUrl,type1Name:e.type1.enName,type2Name:(null==(t=e.type2)?void 0:t.enName)??null,height:e.height,weight:e.weight,stats:e.stats}}async function l(n,r){const c=await a(n,r),l=await async function(e,a){const n={credentials:"same-origin",method:"GET"},s=await t(e,a,n);return await s.json()}(n,c.species.url);return function(t,a,n,s){var r,c;return{id:t.id,enName:t.species.name,jaName:(null==(r=a.names.find((e=>"ja"===e.language.name)))?void 0:r.name)??"???",imageUrl:t.sprites.front_default,imageBackUrl:t.sprites.back_default??null,gifUrl:t.sprites.other.showdown.front_default??null,gifBackUrl:t.sprites.other.showdown.back_default??null,imageUrlArray:i(t.sprites),jaGenus:(null==(c=a.genera.find((e=>"ja"===e.language.name)))?void 0:c.genus)??null,type1:e(n),type2:s?e(s):null,height:t.height,weight:t.weight,stats:o(t.stats),isDefault:t.is_default,varieties:a.varieties.filter((e=>e.pokemon.name!==t.species.name)).map((e=>e.pokemon.name)),generation:a.generation.name}}(c,l,await s(n,c.types[0].type.url),c.types[1]?await s(n,c.types[1].type.url):null)}export{c,n as g,l as m};
