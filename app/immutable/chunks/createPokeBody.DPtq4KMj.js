function x(){return Matter.Engine.create({enableSleeping:!0,positionIterations:6,velocityIterations:4,constraintIterations:6})}function h(){return Matter.Runner.create()}function M(n,e){return Matter.Render.create({element:e,engine:n,options:{width:e.clientWidth,height:e.clientHeight,pixelRatio:1,background:"transparent",hasBounds:!1,wireframes:!1,showSleeping:!1}})}function p(n,e){const a=Matter.Mouse.create(e.canvas);return e.mouse=a,Matter.MouseConstraint.create(n,{mouse:a,constraint:{stiffness:.2,damping:0,length:0,render:{visible:!1,lineWidth:2,strokeStyle:"#00ff00"}}})}async function w(n){const e=n.clientWidth,a=n.clientHeight;function t(c,s,i,o){return[{x:c/2-o,y:-i/2,w:c+o*2,h:i},{x:c/2-o,y:s+i/2,w:c+o*2,h:i},{x:-i/2,y:s/2-o,w:i,h:s+o*2},{x:c+i/2,y:s/2-o,w:i,h:s+o*2}]}const r=t(e,a,2e3,0).map(c=>Matter.Bodies.rectangle(c.x,c.y,c.w,c.h,{isStatic:!0,render:{visible:!1}}));return Matter.Composite.add(Matter.Composite.create(),r)}function b(n,e,a,t){function r(){t.isHolding=!0,Matter.World.add(n,e)}function c(){t.isHolding=!1,Matter.World.remove(n,e)}function s(){t.isHolding=!1,e.constraint.bodyA=null,e.constraint.bodyB=null,e.mouse.position={x:-1,y:-1},Matter.World.remove(n,e)}function i(o){const l=a.getBoundingClientRect();(o.clientX<l.left||o.clientX>l.right||o.clientY<l.top||o.clientY>l.bottom)&&Matter.World.remove(n,e)}return{pointerdown:r,pointerup:c,pointerleave:s,pointermove:i}}async function u(n,e){const a=await d(n),t=f(a),r=y(t,a.width,a.height),c=g(r);return m(c,e)}async function d(n){return new Promise((e,a)=>{const t=new Image;t.crossOrigin="Anonymous",t.src=n,t.onload=()=>e(t),t.onerror=r=>a(r)})}function f(n){const{width:e,height:a}=n,t=document.createElement("canvas");t.width=e,t.height=a;const r=t.getContext("2d");if(!r)throw new Error("Canvas context could not be obtained");return r.drawImage(n,0,0,e,a),r.getImageData(0,0,e,a).data}function y(n,e,a){const t=[],r=new Set;function c(i,o){const l=(o*e+i)*4;return n[l+3]===0}function s(i,o){const l=`${i},${o}`;r.has(l)||(t.push({x:i,y:o}),r.add(l))}for(let i=0;i<a;i++)for(let o=0;o<e;o++)c(o,i)||((i===0||c(o,i-1))&&s(o,i),(i===a-1||c(o,i+1))&&s(o,i),(o===0||c(o-1,i))&&s(o,i),(o===e-1||c(o+1,i))&&s(o,i));return t}function g(n){const e=n.reduce((t,r)=>(t.x+=r.x,t.y+=r.y,t),{x:0,y:0});e.x/=n.length,e.y/=n.length;const a=n.map(t=>{const r=Math.atan2(t.y-e.y,t.x-e.x);return{...t,angle:r}});return a.sort((t,r)=>t.angle-r.angle),a.map(t=>({x:t.x,y:t.y}))}function m(n,e){const a=n.reduce((r,c)=>r+c.x,0)/n.length,t=n.reduce((r,c)=>r+c.y,0)/n.length;return n.map(r=>({x:a+(r.x-a)*e,y:t+(r.y-t)*e}))}async function W(n,e,a){const t=await u(n,.9);let r=1;if(e){const s=Matter.Bounds.create(t),i=s.max.x-s.min.x,o=s.max.y-s.min.y;r=e/Math.max(i,o)}const c=Matter.Vertices.scale(t,r,r,{x:0,y:0});return Matter.Bodies.fromVertices(a.x,a.y,[c],{restitution:.2,friction:.1,density:.001,render:{sprite:{texture:n,xScale:r,yScale:r}}})}export{h as a,M as b,p as c,w as d,b as e,W as f,x as i};
