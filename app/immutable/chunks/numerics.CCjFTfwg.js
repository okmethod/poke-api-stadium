import{_ as i}from"./preload-helper.D6kgxu3v.js";import{b as u}from"./paths.Sxkzc8Vr.js";const m=!1;async function d(t){const o=t.stream().pipeThrough(new DecompressionStream("gzip"));return await(await new Response(o).blob()).text()}async function c(t,o){console.log("loading: ",o);try{if(!m){console.log("isProduction");const e=`${u}/${o}`,a=await(await t(e)).blob(),l=await d(a);return JSON.parse(l)}}catch(e){throw console.error(`failed to load ${o}:`,e),e}}let s=null;async function p(t,o){return s===null&&(s=await c(t,"staticPokeDict.json.gz")),s[o]}let r=null;async function T(t,o){return r===null&&(r=await c(t,"staticAddPokeDict.json.gz")),r[o]}async function g(t){const{STATIC_TYPE_DICT:o,TYPE_COLOR_DICT:e}=await i(async()=>{const{STATIC_TYPE_DICT:n,TYPE_COLOR_DICT:a}=await import("./staticTypeData.B1KTCKI2.js");return{STATIC_TYPE_DICT:n,TYPE_COLOR_DICT:a}},[],import.meta.url);return{...o[t],...e[t]}}async function D(t){const{STATIC_BALL_DICT:o}=await i(async()=>{const{STATIC_BALL_DICT:e}=await import("./staticItemData.DSMs3vXt.js");return{STATIC_BALL_DICT:e}},[],import.meta.url);return o[t]}function h(t,o){return`${t?(t*.1).toFixed(1):"???"} ${o==="height"?"m":"kg"}`}function w(t){return t!==void 0?t.toString():"???"}function P(t){return Math.floor(Math.random()*t)}export{D as a,T as b,p as c,h as d,w as e,g as f,P as g};
