import{_ as t}from"./preload-helper.CJnnZAUh.js";import{b as a}from"./paths.CZZTBtnE.js";async function n(t,n){try{{const r=`${a}/${n}`,o=await t(r),s=await o.blob(),e=await async function(t){const a=t.stream().pipeThrough(new DecompressionStream("gzip")),n=await new Response(a).blob();return await n.text()}(s);return JSON.parse(e)}}catch(r){throw console.error(`failed to load ${n}:`,r),r}}let r=null;async function o(t,a){return null===r&&(r=await n(t,"staticPokeDict.json.gz")),r[a]}let s=null;async function e(t,a){return null===s&&(s=await n(t,"staticAddPokeDict.json.gz")),s[a]}async function i(a){const{STATIC_TYPE_DICT:n,TYPE_COLOR_DICT:r}=await t((async()=>{const{STATIC_TYPE_DICT:t,TYPE_COLOR_DICT:a}=await import("./staticTypeData.B1KTCKI2.js");return{STATIC_TYPE_DICT:t,TYPE_COLOR_DICT:a}}),[],import.meta.url);return{...n[a],...r[a]}}async function c(a){const{STATIC_BALL_DICT:n}=await t((async()=>{const{STATIC_BALL_DICT:t}=await import("./staticItemData.Bb7wLmKF.js");return{STATIC_BALL_DICT:t}}),[],import.meta.url);return n[a]}export{o as a,c as b,e as c,i as f};
