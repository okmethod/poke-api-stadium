import{_ as t}from"./preload-helper.BAWc4jz7.js";import{b as a}from"./paths.DjGFpy-B.js";const n=!1;async function o(t,o){try{if(!n){const n=`${a}/${o}`,r=await t(n),s=await r.blob(),e=await async function(t){const a=t.stream().pipeThrough(new DecompressionStream("gzip")),n=await new Response(a).blob();return await n.text()}(s);return JSON.parse(e)}}catch(r){throw console.error(`failed to load ${o}:`,r),r}}let r=null;async function s(t,a){return null===r&&(r=await o(t,"staticPokeDict.json.gz")),r[a]}let e=null;async function i(t,a){return null===e&&(e=await o(t,"staticAddPokeDict.json.gz")),e[a]}async function c(a){const{STATIC_TYPE_DICT:n,TYPE_COLOR_DICT:o}=await t((async()=>{const{STATIC_TYPE_DICT:t,TYPE_COLOR_DICT:a}=await import("./staticTypeData.B1KTCKI2.js");return{STATIC_TYPE_DICT:t,TYPE_COLOR_DICT:a}}),[],import.meta.url);return{...n[a],...o[a]}}async function T(a){const{STATIC_BALL_DICT:n}=await t((async()=>{const{STATIC_BALL_DICT:t}=await import("./staticItemData.Bb7wLmKF.js");return{STATIC_BALL_DICT:t}}),[],import.meta.url);return n[a]}export{s as a,T as b,i as c,c as f};
